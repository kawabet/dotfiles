"----------------------------------------------------
" vimrc
"----------------------------------------------------

if &compatible
  set nocompatible
endif

" 一旦ファイルタイプ関連を無効化する
" filetype off

function! s:source_rc(path, ...) abort "{{{
  let use_global = get(a:000, 0, !has('vim_starting'))
  let abspath = resolve(expand('~/.vim/rc/' . a:path))
  if !use_global
    execute 'source' fnameescape(abspath)
    return
  endif

  " substitute all 'set' to 'setglobal'
  let content = map(readfile(abspath),
        \ 'substitute(v:val, "^\\W*\\zsset\\ze\\W", "setglobal", "")')
  " create tempfile and source the tempfile
  let tempfile = tempname()
  try
    call writefile(content, tempfile)
    execute 'source' fnameescape(tempfile)
  finally
    if filereadable(tempfile)
      call delete(tempfile)
    endif
  endtry
endfunction "}}}

" Set augroup
augroup MyAutoGrp
  autocmd!
  autocmd CursorHold *.toml syntax sync minlines=300
augroup END

""""""""""""""""""""""""""""""
" プラグインのセットアップ
""""""""""""""""""""""""""""""
call s:source_rc('dein.vim')

if has('vim_starting')
  call dein#call_hook('source')
  call dein#call_hook('post_source')

  syntax enable
  filetype plugin indent on
endif

""""""""""""""""""""""""""""""
" 各種オプションの設定
""""""""""""""""""""""""""""""
call s:source_rc('basic.vim')
call s:source_rc('color.vim')
call s:source_rc('editing.vim')
call s:source_rc('plugins_setting.vim')


""""""""""""""""""""""""""""""

" filetypeの自動検出(最後の方に書いた方がいいらしい)
filetype plugin indent on
