[[plugins]]
repo = 'Shougo/dein.vim'
[[plugins]]
# ディレクトリからファイルを選択
# http://qiita.com/0829/items/261225a51439776b36bf
repo = 'Shougo/vimfiler.vim'
hook_add= '''
  " [Neovimはじめました & 2016年vimrc大掃除](http://blog.muuny-blue.info/c95d62c68196b2d0c1c1de8c7eeb6d50.html#neoterm)
  call vimfiler#custom#profile('default', 'context', {
    \ 'safe' : 0,
    \ 'auto_expand' : 1,
    \ 'parent' : 0
  \ })
  let g:vimfiler_as_default_explorer = 1

  "key mapping
  " 別ウィンドウで開く
  nnoremap <space>fe :VimFilerExplore -split -status -winwidth=35 -find -toggle -no-quit<Cr>
  " 現在のファイルのディレクトリで開く
  nnoremap <space>ff :VimFilerBufferDir -quit<Cr>
  " プロジェクトホームで開く
  nnoremap <space>fg :VimFiler -project<Cr>
  " Two columns of indentation.
  let g:vimfiler_tree_indentation = 2

  autocmd FileType vimfiler call s:vimfiler_my_settings()
  function! s:vimfiler_my_settings()
    nnoremap <silent><buffer><expr> s vimfiler#do_switch_action('split')
    nnoremap <silent><buffer><expr> v vimfiler#do_switch_action('vsplit')
    nnoremap <silent><buffer><expr> t vimfiler#do_action('tabopen')
  endfunction

  " Textmate icons
  let g:vimfiler_tree_leaf_icon = ' '
  let g:vimfiler_tree_opened_icon = '▾'
  let g:vimfiler_tree_closed_icon = '▸'
  let g:vimfiler_file_icon = '-'
  let g:vimfiler_marked_file_icon = '*'
'''
# ファイルをtree表示してくれる
# [[plugins]]
# repo = 'scrooloose/nerdtree'

# toml
[[plugins]]
repo = 'cespare/vim-toml'

# Gitを便利に使う
[[plugins]]
repo = 'tpope/vim-fugitive'

# Gitの差分を表示
# [Vimメモ : vim\-gitgutterで差分を左端に表示する \- もた日記](http://wonderwall.hatenablog.com/entry/2016/03/26/211710)
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  " let g:gitgutter_highlight_lines = 1
'''

# シングルクオートとダブルクオートの入れ替え等
# [surround\.vimの使い方 \| Memo on the Web](http://motw.mods.jp/Vim/surround.html)
# ds'	文を囲んでいる ' を消す
# di'	' で囲まれた部分を消す
# cs'"	' を " に変更
# ci'	' で囲まれた部分を消して, インサートモードに入る
# S'	ビジュアルモードで選択した部分を ' で囲む
# yss'	文を ' で囲む
# ysiw'	カーソルがある単語を ' で囲む
[[plugins]]
repo = 'tpope/vim-surround'

# vim-commentary gcでコメントアウト
[[plugins]]
repo = 'tpope/vim-commentary'

# 静的解析
# [[plugins]]
# repo = 'vim-syntastic/syntastic'
# hook_add='''
#   " You shouldn't use 'tsc' checker.
#   let g:syntastic_typescript_checkers=['tsuquyomi']
# '''
# [VimでESLintとFlowを使うためにNeomakeからALEに乗り換える \- Qiita](http://qiita.com/zaki-yama/items/6bcc24469d06acdf8643)
[[plugins]]
repo='w0rp/ale'
hook_add='''
  let g:ale_statusline_format = ['E%d', 'W%d', '']
  let g:ale_linters = {'typescript': ['tsuquyomi', 'tslint']}
  nmap <silent> <space>j <Plug>(ale_next_wrap)
  nmap <silent> <space>k <Plug>(ale_previous_wrap)

  let g:ale_lint_on_save = 1
  let g:ale_lint_on_text_changed = 'never'
  let g:ale_lint_on_enter = 0
'''

# ドキュメント参照
[[plugins]]
repo = 'thinca/vim-ref'
[[plugins]]
repo = 'yuku-t/vim-ref-ri'

# メソッドの定義元へジャンプ
[[plugins]]
repo = 'szw/vim-tags'
# クラスのアウトラインを表示
[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
  nmap <F8> :TagbarToggle<CR>
'''

# ログファイルを色づけしてくれる
[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'

# Markdown用
# 参考:http://www.key-p.com/blog/staff/archives/9032
# :PrevimOpen ブラウザでプレビューを表示する
[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add= '''
  let g:vim_markdown_folding_disabled = 1
'''
[[plugins]]
repo = 'kannokanno/previm'

# [Vim \- URL からブラウザオープン！ \- mk\-mode BLOG](http://www.mk-mode.com/octopress/2014/11/13/vim-open-browser-plugin/)
# gx でカーソル下のURLをブラウザでOPENする
[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
  let g:netrw_nogx = 1 " disable netrw's gx mapping.
  nmap gx <Plug>(openbrowser-smart-search)
  vmap gx <Plug>(openbrowser-smart-search)
'''

# 色々なカラースキーム
[[plugins]]
repo = 'flazz/vim-colorschemes'
hook_add = '''
  " [dein\.vimによるプラグイン管理のマイベストプラクティス \- Qiita](http://qiita.com/kawaz/items/ee725f6214f91337b42b)
  " set background=dark
  " au MyAutoGrp VimEnter * nested colorscheme monokai
'''

# カラースキーム
# repo= 'kawabet/vim-luna'

# サブモードを作る
[[plugins]]
repo = 'kana/vim-submode'

[[plugins]]
repo = 'nsf/gocode'
rtp = 'vim'

# vimからHTTP GETやPOSTができる
[[plugins]]
repo = 'mattn/webapi-vim'

# ステータスラインを良い感じにする
[[plugins]]
repo = 'vim-airline/vim-airline'
[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
  let g:airline_theme='hybrid'
'''


# ウィンドウマネージャ
# [【Vim】タイル型ウィンドウマネージャでタブいらず \| blog\.remora\.cx](http://blog.remora.cx/2013/05/use-dwm-in-vim.html)
# [[plugins]]
# repo = 'spolu/dwm.vim'
# hook_add = """
#   let g:dwm_map_keys=0
# """

# [Vim\-EasyMotionでカーソル移動を爆速にして生産性をもっと向上させる \- haya14busa](http://haya14busa.com/mastering-vim-easymotion/)
[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
  nmap <space><space> <Plug>(easymotion-s2)
'''

[[plugins]]
repo = "ctrlpvim/ctrlp.vim"
